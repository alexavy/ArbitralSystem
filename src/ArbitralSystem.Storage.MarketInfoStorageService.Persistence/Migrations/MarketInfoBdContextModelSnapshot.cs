// <auto-generated />
using System;
using ArbitralSystem.Storage.MarketInfoStorageService.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ArbitralSystem.Storage.MarketInfoStorageService.Persistence.Migrations
{
    [DbContext(typeof(MarketInfoBdContext))]
    partial class MarketInfoBdContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ArbitralSystem.Storage.MarketInfoStorageService.Persistence.Entities.DistributerState", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTimeOffset>("ChangedAt")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("CurrentStatus")
                        .HasColumnType("int");

                    b.Property<string>("Exchange")
                        .IsRequired()
                        .HasColumnType("varchar(max)")
                        .IsUnicode(false);

                    b.Property<int>("PreviousStatus")
                        .HasColumnType("int");

                    b.Property<string>("Symbol")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DistributerStates");
                });

            modelBuilder.Entity("ArbitralSystem.Storage.MarketInfoStorageService.Persistence.Entities.OrderbookPriceEntry", b =>
                {
                    b.Property<DateTime>("CatchAt")
                        .HasColumnType("datetime2");

                    b.Property<byte>("Direction")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Exchange")
                        .HasColumnType("tinyint");

                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(19,9)");

                    b.Property<decimal>("Quantity")
                        .HasColumnType("decimal(19,9)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("varchar(16)")
                        .HasMaxLength(12);

                    b.ToTable("OrderbookPriceEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
